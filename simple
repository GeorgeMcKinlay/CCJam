local function require(file)
	return dofile(shell.resolve(file))
end

local SIMPLE_SCRIPT_DIR = shell.resolve("simplescript")
local Lexer = require("simplescript/lexer.lua")
local Interpreter = require("simplescript/interpreter.lua")

local localLexer = Lexer.new()
local localInterpreter = Interpreter.new()

local function runString(str)
	localLexer:clear()
	local err = localLexer:tokenise(str)
	if err ~= nil then printError(err) end
	--print(textutils.serialise(localLexer.parseTree))
	localInterpreter:interpret(localLexer.parseTree, true)
end

local function runFile(file)
	local f = fs.open(file, "r")
	local str = f.readAll()
	runString(str)
	f.close()
end

local argv = { ... }
local argc = #argv

if argc ~= 0 then
	local file = argv[1]
	-- TODO: Execute file.
	return
end

if not fs.exists(SIMPLE_SCRIPT_DIR) or not fs.isDir(SIMPLE_SCRIPT_DIR) then
	printError("Couldn't find the simplescript core files!")
	return
end

local history = {}
local termColour = term.isColour() and colours.yellow or colours.white

term.setTextColour(termColour)
print("SimpleScript v1.0 Console")

localInterpreter:loadPackage(shell.resolve("simplescript/pkgs/computer", "Dimitri"))
localInterpreter:loadPackage(shell.resolve("simplescript/pkgs/terminal"))

while true do
	term.setTextColour(termColour)
	write("> ")
	
	term.setTextColour(colours.white)
	local input = read(nil, history)
	if input:lower() == "clear" then localLexer:clear() end
	table.insert(history, input)
	runString(input)
	
	if input:lower() == "exit" then break end
end